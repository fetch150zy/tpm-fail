
# This file was *autogenerated* from the file nonce.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_85034076815184974961739170239653072089442086308599627559489680731885713194115 = Integer(85034076815184974961739170239653072089442086308599627559489680731885713194115); _sage_const_257 = Integer(257); _sage_const_4 = Integer(4); _sage_const_256 = Integer(256); _sage_const_8 = Integer(8); _sage_const_0xb39eaeb437e33087132f01c2abc60c6a16904ee3771cd7b0d622d01061b40729 = Integer(0xb39eaeb437e33087132f01c2abc60c6a16904ee3771cd7b0d622d01061b40729); _sage_const_12 = Integer(12); _sage_const_16 = Integer(16); _sage_const_50 = Integer(50)# from signature samples recovers nonces and
# computes most signaticant 4, 8, 12 bits



modulo = Integer(115792089210356248762697446949407573529996955224135760342422259061068512044369L)
digest = Integer(_sage_const_0xb39eaeb437e33087132f01c2abc60c6a16904ee3771cd7b0d622d01061b40729 )

inf_real_key = _sage_const_85034076815184974961739170239653072089442086308599627559489680731885713194115 

key = Integer(inf_real_key)


def load_samples():
    ocounter = _sage_const_0 
    lines=_sage_const_0 

    with open("sigpairs.txt", "r") as f:
        for line in f:
            a = line.split()
            t = tuple([int(x,_sage_const_16 ) for x in a])
            r,s = t
            nonce = lift(mod((digest+key*Integer(r))*inverse_mod(s,modulo), modulo))
            four = nonce//_sage_const_2 **(_sage_const_256 -_sage_const_4 )
            eight = nonce//_sage_const_2 **(_sage_const_256 -_sage_const_8 )
            twelve = nonce//_sage_const_2 **(_sage_const_256 -_sage_const_12 )
            ocounter += nonce//_sage_const_2 **(_sage_const_256 -_sage_const_1 )
            print four, eight, twelve, "0x"+hex(r), " 0x"+hex(s)
            print bin(nonce + _sage_const_2 **_sage_const_257 )[_sage_const_4 :_sage_const_50 ]
            lines = lines + _sage_const_1 
            print ocounter, lines,float(ocounter)/float(lines)


load_samples()

